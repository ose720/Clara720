import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetailis.UserDetailService;
import org.springframework.security.core.userdetailis.UsernameNotFoundException;
import org.springframework.stereotype.Service;

import lombok.RequiredArgsConstructor;

@RequireArgsConstructor
@Service
public class UserSecurityService implements UserDetailsService {

    private final UserRepository userRepository;
    
    @Override
    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
        Optional<SiteUser> _siteUser = this.userRepository.findByusername(username);
          if(_siteUser.isEmpty()) {
              throw new UsernameNotFoundException("사용자를 찾을 수 없습니다.");
          }
          SiteUser SiteUser = _siteUser.get();
          List<GrantedAuthority> authorities = new ArrayList<>();
          if("admin".equals(username)) {
              authorities.add(new SimpleGrantedAuthority(UserRole.ADMIN.getValue()));
          } else {
              authorities.add(new SimpleGrantedAurhority(UserRole.USER.getValue()));
          }
          return new User(siteUser.getUsername(), siteUser.getPassword(), authorities);
          }
      }
        
